apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: policies.appautoscaling.aws.upbound.io
      version: v1
  creationTimestamp: "2024-04-04T22:29:54Z"
  generation: 2
  name: policies.appautoscaling.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: ProviderRevision
    name: provider-aws-appautoscaling-216210f87977
    uid: ed30718f-9080-46d9-b568-3824969deee3
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: provider-aws-appautoscaling
    uid: c7625ff2-ce34-4a39-b6c4-b1d12da11b8b
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: provider-aws-appautoscaling-80ae791d0f90
    uid: a9b08e61-7c02-4dee-a200-3f95f206f17b
  resourceVersion: "1573970244"
  uid: a3c4154f-774c-45c6-ae42-9ef7255f6bcc
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4ekNDQXR1Z0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTFNRE13TURBeU5ESmFGdzB6Ck5EQTFNRE13TURBeU5ESmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEZURDSEJTVEF4CkhpNm9JK2sySDQ4dCsvcDdtRWt0c2QraFdFcVpnK1U1aXNDSTRkK2xLV3UwZEo1QkNlV2JoT3R3UXRJTXhJSVcKWEQvdzI4MFhCN0UyamhkUmhVdFhjSWU0ekk5QU1PMlUvQmhUWmdhYUkzSWhOOXJBQTJ1cnA1cklzSXVQdU4yMworVHVaTVpxWDI4SHBlWUczeG1oTjdNU2xaYmhSWExrV0loK0ZnMDd0UTZWemFzY004VFc0VWwyMXRhTGM3NzJWCldXaXo0RVJXVTNCUHhBeUdzN0dpaXh6ZWZ5ODhvN0g2azMvU0NGc2JlbGhvVnRBUXF1eEF2OUdVNFNZemNrdlUKbW0zbGpDZXEwVXlSTXlha3E2SWd5SXpSeVIyb0poNldWSkpDbEhFMG1HUHAvZk1LWDk1OWdPd0FMZlh6a1VQMgpvL2ZoN1p0OFFwdFRBZ01CQUFHamdjSXdnYjh3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1lrR0ExVWRFUVNCZ1RCL2dodHdjbTkyYVdSbGNpMWgKZDNNdFlYQndZWFYwYjNOallXeHBibWVDTFhCeWIzWnBaR1Z5TFdGM2N5MWhjSEJoZFhSdmMyTmhiR2x1Wnk1agpjbTl6YzNCc1lXNWxMWE41YzNSbGJZSXhjSEp2ZG1sa1pYSXRZWGR6TFdGd2NHRjFkRzl6WTJGc2FXNW5MbU55CmIzTnpjR3hoYm1VdGMzbHpkR1Z0TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFWS2JTOUkxdC8vVWYKNXFKUmtaVklCR2tMdFlsc0hQSG9LQUZmV3F3T01JMi84MUJ3QWdYd3dER1p2RzZNaURRWGlWb3RlSmNHYXNQUwpVQVRGUjEvOTRmN21hei9BZ01XdnVJYldZem1xWjR1VWNDdndwL0w2ZjJ2UExGRHN4aEdjL3BuRWZSQjJzeTVpCnp0OWwvS0lkVEc4bEFQa3BYTTJlMXFhU0JsNHF0THlwY3YzcFJuYWN6NDVKanRrYkl4WklYZTVIOWk0YWhrVE4KRlp1TXE4Vm1sazNXa3VQd1JObVpvejhyWllQcTVvdThVR0xQM3hLSDNLN1luMkxIeTF0Y3UyZVhUR0lLUVh1SQpYdG96Ymxlb2pIb0hFUzd0VVI4UnowMUVqQXZJYS9ndFJiSHVvVlh3UXo0VGl4cWZXMTVEaWJsSE54L05uL0FmCnFZUmw4djBxVVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        service:
          name: provider-aws-appautoscaling
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: appautoscaling.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Policy is the Schema for the Policys API. Provides an Application
          AutoScaling Policy resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PolicySpec defines the desired state of Policy
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  policyType:
                    description: Policy type. Valid values are StepScaling and TargetTrackingScaling.
                      Defaults to StepScaling. Certain services only support only
                      one policy type. For more information see the Target Tracking
                      Scaling Policies and Step Scaling Policies documentation.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  resourceId:
                    description: 'Resource type and unique identifier string for the
                      resource associated with the scaling policy. Documentation can
                      be found in the ResourceId parameter at: AWS Application Auto
                      Scaling API Reference'
                    type: string
                  resourceIdRef:
                    description: Reference to a Target in appautoscaling to populate
                      resourceId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  resourceIdSelector:
                    description: Selector for a Target in appautoscaling to populate
                      resourceId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  scalableDimension:
                    description: 'Scalable dimension of the scalable target. Documentation
                      can be found in the ScalableDimension parameter at: AWS Application
                      Auto Scaling API Reference'
                    type: string
                  scalableDimensionRef:
                    description: Reference to a Target in appautoscaling to populate
                      scalableDimension.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  scalableDimensionSelector:
                    description: Selector for a Target in appautoscaling to populate
                      scalableDimension.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  serviceNamespace:
                    description: 'AWS service namespace of the scalable target. Documentation
                      can be found in the ServiceNamespace parameter at: AWS Application
                      Auto Scaling API Reference'
                    type: string
                  serviceNamespaceRef:
                    description: Reference to a Target in appautoscaling to populate
                      serviceNamespace.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceNamespaceSelector:
                    description: Selector for a Target in appautoscaling to populate
                      serviceNamespace.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  stepScalingPolicyConfiguration:
                    description: Step scaling policy configuration, requires policy_type
                      = "StepScaling" (default). See supported fields below.
                    items:
                      properties:
                        adjustmentType:
                          description: Whether the adjustment is an absolute number
                            or a percentage of the current capacity. Valid values
                            are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
                          type: string
                        cooldown:
                          description: Amount of time, in seconds, after a scaling
                            activity completes and before the next scaling activity
                            can start.
                          type: number
                        metricAggregationType:
                          description: Aggregation type for the policy's metrics.
                            Valid values are "Minimum", "Maximum", and "Average".
                            Without a value, AWS will treat the aggregation type as
                            "Average".
                          type: string
                        minAdjustmentMagnitude:
                          description: Minimum number to adjust your scalable dimension
                            as a result of a scaling activity. If the adjustment type
                            is PercentChangeInCapacity, the scaling policy changes
                            the scalable dimension of the scalable target by this
                            amount.
                          type: number
                        stepAdjustment:
                          description: 'Set of adjustments that manage scaling. These
                            have the following structure:'
                          items:
                            properties:
                              metricIntervalLowerBound:
                                description: Lower bound for the difference between
                                  the alarm threshold and the CloudWatch metric. Without
                                  a value, AWS will treat this bound as negative infinity.
                                type: string
                              metricIntervalUpperBound:
                                description: Upper bound for the difference between
                                  the alarm threshold and the CloudWatch metric. Without
                                  a value, AWS will treat this bound as infinity.
                                  The upper bound must be greater than the lower bound.
                                type: string
                              scalingAdjustment:
                                description: Number of members by which to scale,
                                  when the adjustment bounds are breached. A positive
                                  value scales up. A negative value scales down.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  targetTrackingScalingPolicyConfiguration:
                    description: Target tracking policy, requires policy_type = "TargetTrackingScaling".
                      See supported fields below.
                    items:
                      properties:
                        customizedMetricSpecification:
                          description: 'Custom CloudWatch metric. Documentation can
                            be found  at: AWS Customized Metric Specification. See
                            supported fields below.'
                          items:
                            properties:
                              dimensions:
                                description: Configuration block(s) with the dimensions
                                  of the metric if the metric was published with dimensions.
                                  Detailed below.
                                items:
                                  properties:
                                    name:
                                      description: Name of the dimension.
                                      type: string
                                    value:
                                      description: Value of the dimension.
                                      type: string
                                  type: object
                                type: array
                              metricName:
                                description: Name of the metric.
                                type: string
                              metrics:
                                description: Metrics to include, as a metric data
                                  query.
                                items:
                                  properties:
                                    expression:
                                      description: Math expression used on the returned
                                        metric. You must specify either expression
                                        or metric_stat, but not both.
                                      type: string
                                    id:
                                      description: Short name for the metric used
                                        in target tracking scaling policy.
                                      type: string
                                    label:
                                      description: Human-readable label for this metric
                                        or expression.
                                      type: string
                                    metricStat:
                                      description: Structure that defines CloudWatch
                                        metric to be used in target tracking scaling
                                        policy. You must specify either expression
                                        or metric_stat, but not both.
                                      items:
                                        properties:
                                          metric:
                                            description: Structure that defines the
                                              CloudWatch metric to return, including
                                              the metric name, namespace, and dimensions.
                                            items:
                                              properties:
                                                dimensions:
                                                  description: Configuration block(s)
                                                    with the dimensions of the metric
                                                    if the metric was published with
                                                    dimensions. Detailed below.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: Name of the dimension.
                                                        type: string
                                                      value:
                                                        description: Value of the
                                                          dimension.
                                                        type: string
                                                    type: object
                                                  type: array
                                                metricName:
                                                  description: Name of the metric.
                                                  type: string
                                                namespace:
                                                  description: Namespace of the metric.
                                                  type: string
                                              type: object
                                            type: array
                                          stat:
                                            description: Statistic of the metrics
                                              to return.
                                            type: string
                                          unit:
                                            description: Unit of the metric.
                                            type: string
                                        type: object
                                      type: array
                                    returnData:
                                      description: Boolean that indicates whether
                                        to return the timestamps and raw data values
                                        of this metric, the default is true
                                      type: boolean
                                  type: object
                                type: array
                              namespace:
                                description: Namespace of the metric.
                                type: string
                              statistic:
                                description: 'Statistic of the metric. Valid values:
                                  Average, Minimum, Maximum, SampleCount, and Sum.'
                                type: string
                              unit:
                                description: Unit of the metric.
                                type: string
                            type: object
                          type: array
                        disableScaleIn:
                          description: Whether scale in by the target tracking policy
                            is disabled. If the value is true, scale in is disabled
                            and the target tracking policy won't remove capacity from
                            the scalable resource. Otherwise, scale in is enabled
                            and the target tracking policy can remove capacity from
                            the scalable resource. The default value is false.
                          type: boolean
                        predefinedMetricSpecification:
                          description: Predefined metric. See supported fields below.
                          items:
                            properties:
                              predefinedMetricType:
                                description: Metric type.
                                type: string
                              resourceLabel:
                                description: 'Reserved for future use if the predefined_metric_type
                                  is not ALBRequestCountPerTarget. If the predefined_metric_type
                                  is ALBRequestCountPerTarget, you must specify this
                                  argument. Documentation can be found at: AWS Predefined
                                  Scaling Metric Specification. Must be less than
                                  or equal to 1023 characters in length.'
                                type: string
                            type: object
                          type: array
                        scaleInCooldown:
                          description: Amount of time, in seconds, after a scale in
                            activity completes before another scale in activity can
                            start.
                          type: number
                        scaleOutCooldown:
                          description: Amount of time, in seconds, after a scale out
                            activity completes before another scale out activity can
                            start.
                          type: number
                        targetValue:
                          description: Target value for the metric.
                          type: number
                      type: object
                    type: array
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  policyType:
                    description: Policy type. Valid values are StepScaling and TargetTrackingScaling.
                      Defaults to StepScaling. Certain services only support only
                      one policy type. For more information see the Target Tracking
                      Scaling Policies and Step Scaling Policies documentation.
                    type: string
                  stepScalingPolicyConfiguration:
                    description: Step scaling policy configuration, requires policy_type
                      = "StepScaling" (default). See supported fields below.
                    items:
                      properties:
                        adjustmentType:
                          description: Whether the adjustment is an absolute number
                            or a percentage of the current capacity. Valid values
                            are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
                          type: string
                        cooldown:
                          description: Amount of time, in seconds, after a scaling
                            activity completes and before the next scaling activity
                            can start.
                          type: number
                        metricAggregationType:
                          description: Aggregation type for the policy's metrics.
                            Valid values are "Minimum", "Maximum", and "Average".
                            Without a value, AWS will treat the aggregation type as
                            "Average".
                          type: string
                        minAdjustmentMagnitude:
                          description: Minimum number to adjust your scalable dimension
                            as a result of a scaling activity. If the adjustment type
                            is PercentChangeInCapacity, the scaling policy changes
                            the scalable dimension of the scalable target by this
                            amount.
                          type: number
                        stepAdjustment:
                          description: 'Set of adjustments that manage scaling. These
                            have the following structure:'
                          items:
                            properties:
                              metricIntervalLowerBound:
                                description: Lower bound for the difference between
                                  the alarm threshold and the CloudWatch metric. Without
                                  a value, AWS will treat this bound as negative infinity.
                                type: string
                              metricIntervalUpperBound:
                                description: Upper bound for the difference between
                                  the alarm threshold and the CloudWatch metric. Without
                                  a value, AWS will treat this bound as infinity.
                                  The upper bound must be greater than the lower bound.
                                type: string
                              scalingAdjustment:
                                description: Number of members by which to scale,
                                  when the adjustment bounds are breached. A positive
                                  value scales up. A negative value scales down.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  targetTrackingScalingPolicyConfiguration:
                    description: Target tracking policy, requires policy_type = "TargetTrackingScaling".
                      See supported fields below.
                    items:
                      properties:
                        customizedMetricSpecification:
                          description: 'Custom CloudWatch metric. Documentation can
                            be found  at: AWS Customized Metric Specification. See
                            supported fields below.'
                          items:
                            properties:
                              dimensions:
                                description: Configuration block(s) with the dimensions
                                  of the metric if the metric was published with dimensions.
                                  Detailed below.
                                items:
                                  properties:
                                    name:
                                      description: Name of the dimension.
                                      type: string
                                    value:
                                      description: Value of the dimension.
                                      type: string
                                  type: object
                                type: array
                              metricName:
                                description: Name of the metric.
                                type: string
                              metrics:
                                description: Metrics to include, as a metric data
                                  query.
                                items:
                                  properties:
                                    expression:
                                      description: Math expression used on the returned
                                        metric. You must specify either expression
                                        or metric_stat, but not both.
                                      type: string
                                    id:
                                      description: Short name for the metric used
                                        in target tracking scaling policy.
                                      type: string
                                    label:
                                      description: Human-readable label for this metric
                                        or expression.
                                      type: string
                                    metricStat:
                                      description: Structure that defines CloudWatch
                                        metric to be used in target tracking scaling
                                        policy. You must specify either expression
                                        or metric_stat, but not both.
                                      items:
                                        properties:
                                          metric:
                                            description: Structure that defines the
                                              CloudWatch metric to return, including
                                              the metric name, namespace, and dimensions.
                                            items:
                                              properties:
                                                dimensions:
                                                  description: Configuration block(s)
                                                    with the dimensions of the metric
                                                    if the metric was published with
                                                    dimensions. Detailed below.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: Name of the dimension.
                                                        type: string
                                                      value:
                                                        description: Value of the
                                                          dimension.
                                                        type: string
                                                    type: object
                                                  type: array
                                                metricName:
                                                  description: Name of the metric.
                                                  type: string
                                                namespace:
                                                  description: Namespace of the metric.
                                                  type: string
                                              type: object
                                            type: array
                                          stat:
                                            description: Statistic of the metrics
                                              to return.
                                            type: string
                                          unit:
                                            description: Unit of the metric.
                                            type: string
                                        type: object
                                      type: array
                                    returnData:
                                      description: Boolean that indicates whether
                                        to return the timestamps and raw data values
                                        of this metric, the default is true
                                      type: boolean
                                  type: object
                                type: array
                              namespace:
                                description: Namespace of the metric.
                                type: string
                              statistic:
                                description: 'Statistic of the metric. Valid values:
                                  Average, Minimum, Maximum, SampleCount, and Sum.'
                                type: string
                              unit:
                                description: Unit of the metric.
                                type: string
                            type: object
                          type: array
                        disableScaleIn:
                          description: Whether scale in by the target tracking policy
                            is disabled. If the value is true, scale in is disabled
                            and the target tracking policy won't remove capacity from
                            the scalable resource. Otherwise, scale in is enabled
                            and the target tracking policy can remove capacity from
                            the scalable resource. The default value is false.
                          type: boolean
                        predefinedMetricSpecification:
                          description: Predefined metric. See supported fields below.
                          items:
                            properties:
                              predefinedMetricType:
                                description: Metric type.
                                type: string
                              resourceLabel:
                                description: 'Reserved for future use if the predefined_metric_type
                                  is not ALBRequestCountPerTarget. If the predefined_metric_type
                                  is ALBRequestCountPerTarget, you must specify this
                                  argument. Documentation can be found at: AWS Predefined
                                  Scaling Metric Specification. Must be less than
                                  or equal to 1023 characters in length.'
                                type: string
                            type: object
                          type: array
                        scaleInCooldown:
                          description: Amount of time, in seconds, after a scale in
                            activity completes before another scale in activity can
                            start.
                          type: number
                        scaleOutCooldown:
                          description: Amount of time, in seconds, after a scale out
                            activity completes before another scale out activity can
                            start.
                          type: number
                        targetValue:
                          description: Target value for the metric.
                          type: number
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PolicyStatus defines the observed state of Policy.
            properties:
              atProvider:
                properties:
                  alarmArns:
                    description: List of CloudWatch alarm ARNs associated with the
                      scaling policy.
                    items:
                      type: string
                    type: array
                  arn:
                    description: ARN assigned by AWS to the scaling policy.
                    type: string
                  id:
                    description: Short name for the metric used in target tracking
                      scaling policy.
                    type: string
                  policyType:
                    description: Policy type. Valid values are StepScaling and TargetTrackingScaling.
                      Defaults to StepScaling. Certain services only support only
                      one policy type. For more information see the Target Tracking
                      Scaling Policies and Step Scaling Policies documentation.
                    type: string
                  resourceId:
                    description: 'Resource type and unique identifier string for the
                      resource associated with the scaling policy. Documentation can
                      be found in the ResourceId parameter at: AWS Application Auto
                      Scaling API Reference'
                    type: string
                  scalableDimension:
                    description: 'Scalable dimension of the scalable target. Documentation
                      can be found in the ScalableDimension parameter at: AWS Application
                      Auto Scaling API Reference'
                    type: string
                  serviceNamespace:
                    description: 'AWS service namespace of the scalable target. Documentation
                      can be found in the ServiceNamespace parameter at: AWS Application
                      Auto Scaling API Reference'
                    type: string
                  stepScalingPolicyConfiguration:
                    description: Step scaling policy configuration, requires policy_type
                      = "StepScaling" (default). See supported fields below.
                    items:
                      properties:
                        adjustmentType:
                          description: Whether the adjustment is an absolute number
                            or a percentage of the current capacity. Valid values
                            are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
                          type: string
                        cooldown:
                          description: Amount of time, in seconds, after a scaling
                            activity completes and before the next scaling activity
                            can start.
                          type: number
                        metricAggregationType:
                          description: Aggregation type for the policy's metrics.
                            Valid values are "Minimum", "Maximum", and "Average".
                            Without a value, AWS will treat the aggregation type as
                            "Average".
                          type: string
                        minAdjustmentMagnitude:
                          description: Minimum number to adjust your scalable dimension
                            as a result of a scaling activity. If the adjustment type
                            is PercentChangeInCapacity, the scaling policy changes
                            the scalable dimension of the scalable target by this
                            amount.
                          type: number
                        stepAdjustment:
                          description: 'Set of adjustments that manage scaling. These
                            have the following structure:'
                          items:
                            properties:
                              metricIntervalLowerBound:
                                description: Lower bound for the difference between
                                  the alarm threshold and the CloudWatch metric. Without
                                  a value, AWS will treat this bound as negative infinity.
                                type: string
                              metricIntervalUpperBound:
                                description: Upper bound for the difference between
                                  the alarm threshold and the CloudWatch metric. Without
                                  a value, AWS will treat this bound as infinity.
                                  The upper bound must be greater than the lower bound.
                                type: string
                              scalingAdjustment:
                                description: Number of members by which to scale,
                                  when the adjustment bounds are breached. A positive
                                  value scales up. A negative value scales down.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  targetTrackingScalingPolicyConfiguration:
                    description: Target tracking policy, requires policy_type = "TargetTrackingScaling".
                      See supported fields below.
                    items:
                      properties:
                        customizedMetricSpecification:
                          description: 'Custom CloudWatch metric. Documentation can
                            be found  at: AWS Customized Metric Specification. See
                            supported fields below.'
                          items:
                            properties:
                              dimensions:
                                description: Configuration block(s) with the dimensions
                                  of the metric if the metric was published with dimensions.
                                  Detailed below.
                                items:
                                  properties:
                                    name:
                                      description: Name of the dimension.
                                      type: string
                                    value:
                                      description: Value of the dimension.
                                      type: string
                                  type: object
                                type: array
                              metricName:
                                description: Name of the metric.
                                type: string
                              metrics:
                                description: Metrics to include, as a metric data
                                  query.
                                items:
                                  properties:
                                    expression:
                                      description: Math expression used on the returned
                                        metric. You must specify either expression
                                        or metric_stat, but not both.
                                      type: string
                                    id:
                                      description: Short name for the metric used
                                        in target tracking scaling policy.
                                      type: string
                                    label:
                                      description: Human-readable label for this metric
                                        or expression.
                                      type: string
                                    metricStat:
                                      description: Structure that defines CloudWatch
                                        metric to be used in target tracking scaling
                                        policy. You must specify either expression
                                        or metric_stat, but not both.
                                      items:
                                        properties:
                                          metric:
                                            description: Structure that defines the
                                              CloudWatch metric to return, including
                                              the metric name, namespace, and dimensions.
                                            items:
                                              properties:
                                                dimensions:
                                                  description: Configuration block(s)
                                                    with the dimensions of the metric
                                                    if the metric was published with
                                                    dimensions. Detailed below.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: Name of the dimension.
                                                        type: string
                                                      value:
                                                        description: Value of the
                                                          dimension.
                                                        type: string
                                                    type: object
                                                  type: array
                                                metricName:
                                                  description: Name of the metric.
                                                  type: string
                                                namespace:
                                                  description: Namespace of the metric.
                                                  type: string
                                              type: object
                                            type: array
                                          stat:
                                            description: Statistic of the metrics
                                              to return.
                                            type: string
                                          unit:
                                            description: Unit of the metric.
                                            type: string
                                        type: object
                                      type: array
                                    returnData:
                                      description: Boolean that indicates whether
                                        to return the timestamps and raw data values
                                        of this metric, the default is true
                                      type: boolean
                                  type: object
                                type: array
                              namespace:
                                description: Namespace of the metric.
                                type: string
                              statistic:
                                description: 'Statistic of the metric. Valid values:
                                  Average, Minimum, Maximum, SampleCount, and Sum.'
                                type: string
                              unit:
                                description: Unit of the metric.
                                type: string
                            type: object
                          type: array
                        disableScaleIn:
                          description: Whether scale in by the target tracking policy
                            is disabled. If the value is true, scale in is disabled
                            and the target tracking policy won't remove capacity from
                            the scalable resource. Otherwise, scale in is enabled
                            and the target tracking policy can remove capacity from
                            the scalable resource. The default value is false.
                          type: boolean
                        predefinedMetricSpecification:
                          description: Predefined metric. See supported fields below.
                          items:
                            properties:
                              predefinedMetricType:
                                description: Metric type.
                                type: string
                              resourceLabel:
                                description: 'Reserved for future use if the predefined_metric_type
                                  is not ALBRequestCountPerTarget. If the predefined_metric_type
                                  is ALBRequestCountPerTarget, you must specify this
                                  argument. Documentation can be found at: AWS Predefined
                                  Scaling Metric Specification. Must be less than
                                  or equal to 1023 characters in length.'
                                type: string
                            type: object
                          type: array
                        scaleInCooldown:
                          description: Amount of time, in seconds, after a scale in
                            activity completes before another scale in activity can
                            start.
                          type: number
                        scaleOutCooldown:
                          description: Amount of time, in seconds, after a scale out
                            activity completes before another scale out activity can
                            start.
                          type: number
                        targetValue:
                          description: Target value for the metric.
                          type: number
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  conditions:
  - lastTransitionTime: "2024-04-04T22:29:54Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-04-04T22:29:54Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
